From 3ca056d506c18fe320454d37577d9b80f55e7b6d Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marek=20Marczykowski-G=C3=B3recki?=
 <marmarek@invisiblethingslab.com>
Date: Tue, 10 Feb 2015 02:20:06 +0100
Subject: [PATCH] libxl: allow libxl_domain_suspend to simply suspend a domain,
 without a savefile
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit
Organization: Invisible Things Lab
Cc: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>

When fd=-1, no savefile will be written, but the domain will still be
suspended (but not destroyed). This works pretty well on PV domains, but
is totally untested on HVM (most likely it will crash device model).

Signed-off-by: Marek Marczykowski-Górecki <marmarek@invisiblethingslab.com>
---
 tools/libxl/libxl_dom.c   | 18 ++++++++++++------
 tools/libxl/xl.h          |  2 ++
 tools/libxl/xl_cmdimpl.c  | 47 +++++++++++++++++++++++++++++++++++++++++++++++
 tools/libxl/xl_cmdtable.c | 10 ++++++++++
 4 files changed, 71 insertions(+), 6 deletions(-)

diff --git a/tools/libxl/libxl_dom.c b/tools/libxl/libxl_dom.c
index b514377..4a9ea42 100644
--- a/tools/libxl/libxl_dom.c
+++ b/tools/libxl/libxl_dom.c
@@ -1693,13 +1693,19 @@ void libxl__domain_save(libxl__egc *egc, libxl__domain_suspend_state *dss)
 
     callbacks->switch_qemu_logdirty = libxl__domain_suspend_common_switch_qemu_logdirty;
 
-    dss->sws.ao  = dss->ao;
-    dss->sws.dss = dss;
-    dss->sws.fd  = dss->fd;
-    dss->sws.completion_callback = stream_done;
+    if (dss->fd >= 0) {
+        dss->sws.ao  = dss->ao;
+        dss->sws.dss = dss;
+        dss->sws.fd  = dss->fd;
+        dss->sws.completion_callback = stream_done;
 
-    libxl__stream_write_start(egc, &dss->sws);
-    return;
+        libxl__stream_write_start(egc, &dss->sws);
+        return;
+    } else {
+        /* TODO: make that call async */
+        if (libxl__domain_suspend_common_callback(&dss->shs))
+            rc = 0;
+    }
 
  out:
     domain_save_done(egc, dss, rc);
diff --git a/tools/libxl/xl.h b/tools/libxl/xl.h
index 13bccba..8f36a44 100644
--- a/tools/libxl/xl.h
+++ b/tools/libxl/xl.h
@@ -48,6 +48,8 @@ int main_restore(int argc, char **argv);
 int main_migrate_receive(int argc, char **argv);
 int main_save(int argc, char **argv);
 int main_migrate(int argc, char **argv);
+int main_suspend(int argc, char **argv);
+int main_resume(int argc, char **argv);
 #endif
 int main_dump_core(int argc, char **argv);
 int main_pause(int argc, char **argv);
diff --git a/tools/libxl/xl_cmdimpl.c b/tools/libxl/xl_cmdimpl.c
index 9a2870e..83e9a5b 100644
--- a/tools/libxl/xl_cmdimpl.c
+++ b/tools/libxl/xl_cmdimpl.c
@@ -4096,6 +4096,27 @@ static int save_domain(uint32_t domid, const char *filename, int checkpoint,
     exit(rc < 0 ? 1 : 0);
 }
 
+static int suspend_domain(uint32_t domid)
+{
+    int rc = libxl_domain_suspend(ctx, domid, -1, 0, NULL);
+
+    if (rc < 0) {
+        fprintf(stderr, "Failed to suspend domain, resuming domain\n");
+        libxl_domain_resume(ctx, domid, 1, 0);
+    }
+    exit(rc < 0 ? 1 : 0);
+}
+
+static int resume_domain(uint32_t domid)
+{
+    int rc = libxl_domain_resume(ctx, domid, 1, 0);
+
+    if (rc < 0) {
+        fprintf(stderr, "Failed to resume domain\n");
+    }
+    exit(rc < 0 ? 1 : 0);
+}
+
 static pid_t create_migration_child(const char *rune, int *send_fd,
                                         int *recv_fd)
 {
@@ -4849,6 +4870,32 @@ int main_reboot(int argc, char **argv)
     return main_shutdown_or_reboot(1, argc, argv);
 }
 
+int main_suspend(int argc, char **argv)
+{
+    int opt;
+
+    SWITCH_FOREACH_OPT(opt, "", NULL, "suspend", 1) {
+        /* No options */
+    }
+
+    suspend_domain(find_domain(argv[optind]));
+
+    return 0;
+}
+
+int main_resume(int argc, char **argv)
+{
+    int opt;
+
+    SWITCH_FOREACH_OPT(opt, "", NULL, "resume", 1) {
+        /* No options */
+    }
+
+    resume_domain(find_domain(argv[optind]));
+
+    return 0;
+}
+
 int main_list(int argc, char **argv)
 {
     int opt;
diff --git a/tools/libxl/xl_cmdtable.c b/tools/libxl/xl_cmdtable.c
index 0071f12..12e28eb 100644
--- a/tools/libxl/xl_cmdtable.c
+++ b/tools/libxl/xl_cmdtable.c
@@ -75,6 +75,16 @@ struct cmd_spec cmd_table[] = {
       "                        no PV drivers.\n"
       "-w, --wait              Wait for guest(s) to shutdown.\n"
     },
+    { "suspend",
+      &main_suspend, 0, 1,
+      "Suspend a domain",
+      "[options] <Domain>",
+    },
+    { "resume",
+      &main_resume, 0, 1,
+      "Resume suspended domain",
+      "[options] <Domain>",
+    },
     { "reboot",
       &main_reboot, 0, 1,
       "Issue a reboot signal to a domain",
-- 
2.1.0

