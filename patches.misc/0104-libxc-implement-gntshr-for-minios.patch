From fccff07449e45fb427fab4f341f885e6752fc848 Mon Sep 17 00:00:00 2001
From: Marek Marczykowski <marmarek@invisiblethingslab.com>
Date: Tue, 23 Apr 2013 05:17:59 +0200
Subject: [PATCH 104/105] libxc: implement gntshr for minios
Organization: Invisible Things Lab
Cc: Marek Marczykowski <marmarek@invisiblethingslab.com>

Based on gntalloc interface introduced in previous patch.

Signed-off-by: Marek Marczykowski <marmarek@invisiblethingslab.com>

Ported to Xen 4.7.0 
Signed-off-by: Marcus of Wetware Labs <marcus@wetwa.re>
---
--- xen-4.7.0/extras/mini-os/include/lib.h.orig	2016-07-17 22:41:58.380000000 +0300
+++ xen-4.7.0-new/extras/mini-os/include/lib.h	2016-07-17 22:48:16.625000000 +0300
@@ -53,6 +53,7 @@
 #include <xen/xen.h>
 #include <xen/event_channel.h>
 #include "gntmap.h"
+#include "gntalloc.h"
 
 #if __GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6)
 #define BUILD_BUG_ON(cond) ({ _Static_assert(!(cond), "!(" #cond ")"); })
@@ -144,6 +145,7 @@
     FTYPE_XC,
     FTYPE_EVTCHN,
     FTYPE_GNTMAP,
+    FTYPE_GNTALLOC,
     FTYPE_SOCKET,
     FTYPE_TAP,
     FTYPE_BLK,
@@ -180,6 +182,7 @@
 	    struct evtchn_port_list ports;
 	} evtchn;
 	struct gntmap gntmap;
+	struct gntalloc gntalloc;
 	struct {
 	    struct netfront_dev *dev;
 	} tap;
--- xen-4.7.0/extras/mini-os/lib/sys.c.orig	2016-07-17 22:42:26.874000000 +0300
+++ xen-4.7.0-new/extras/mini-os/lib/sys.c	2016-07-17 22:46:58.302000000 +0300
@@ -88,6 +88,7 @@
 extern void minios_interface_close_fd(int fd);
 extern void minios_evtchn_close_fd(int fd);
 extern void minios_gnttab_close_fd(int fd);
+extern void minios_gntalloc_close_fd(int fd);
 
 pthread_mutex_t fd_lock = PTHREAD_MUTEX_INITIALIZER;
 struct file files[NOFILE] = {
@@ -447,6 +448,9 @@
 	case FTYPE_GNTMAP:
 	    minios_gnttab_close_fd(fd);
 	    return 0;
+	case FTYPE_GNTALLOC:
+	    minios_gntalloc_close_fd(fd);
+	    return 0;
 #endif
 #ifdef CONFIG_NETFRONT
 	case FTYPE_TAP:
--- xen-4.7.0/tools/libs/gnttab/Makefile.orig	2016-07-17 01:08:23.991000000 +0300
+++ xen-4.7.0/tools/libs/gnttab/Makefile	2016-07-17 01:08:47.737000000 +0300
@@ -13,7 +13,7 @@
 SRCS-GNTSHR            += gntshr_core.c
 
 SRCS-$(CONFIG_Linux)   += $(SRCS-GNTTAB) $(SRCS-GNTSHR) linux.c
-SRCS-$(CONFIG_MiniOS)  += $(SRCS-GNTTAB) gntshr_unimp.c minios.c
+SRCS-$(CONFIG_MiniOS)  += $(SRCS-GNTTAB) $(SRCS-GNTSHR) minios.c
 SRCS-$(CONFIG_FreeBSD) += gnttab_unimp.c gntshr_unimp.c
 SRCS-$(CONFIG_SunOS)   += gnttab_unimp.c gntshr_unimp.c
 SRCS-$(CONFIG_NetBSD)  += gnttab_unimp.c gntshr_unimp.c
--- xen-4.7.0/tools/libs/gnttab/minios.c.orig	2016-07-17 01:12:21.137000000 +0300
+++ xen-4.7.0/tools/libs/gnttab/minios.c	2016-07-17 01:24:18.659000000 +0300
@@ -25,6 +25,7 @@
 #include <mini-os/lib.h>

 #include <mini-os/gntmap.h>
+#include <mini-os/gntalloc.h>
 #include <sys/mman.h>
 
 #include <errno.h>
@@ -33,6 +34,7 @@
 #include "private.h"
 
 void minios_gnttab_close_fd(int fd);
+void minios_gntalloc_close_fd(int fd);
 
 int osdep_gnttab_open(xengnttab_handle *xgt)
 {
@@ -106,6 +108,51 @@
 {
     return -1;
 }
+ 
+int osdep_gntshr_open(xengntshr_handle *xgs)
+{
+    int fd = alloc_fd(FTYPE_GNTALLOC);
+    if ( fd == -1 )
+        return -1;
+    gntalloc_init(&files[fd].gntalloc);
+    xgs->fd = fd;
+    return 0;
+}
+
+int osdep_gntshr_close(xengntshr_handle *xgs)
+{
+    if ( xgs->fd == -1 )
+        return 0;
+
+    return close(xgs->fd);
+}
+
+void minios_gntalloc_close_fd(int fd)
+{
+    gntalloc_fini(&files[fd].gntalloc);
+    files[fd].type = FTYPE_NONE;
+}
+
+void *osdep_gntshr_share_pages(xengntshr_handle *xgs,
+                               uint32_t domid, int count,
+                               uint32_t *refs, int writable,
+                               uint32_t notify_offset,
+                               evtchn_port_t notify_port)
+{
+    int fd = xgs->fd;
+
+    return gntalloc_share_pages(&files[fd].gntalloc, domid, count, refs,
+            writable, notify_offset, notify_port);
+}
+
+int osdep_gntshr_unshare(xengntshr_handle *xgs,
+                         void *start_address, uint32_t count)
+{
+    int fd = xgs->fd;
+
+    return gntalloc_munmap(&files[fd].gntalloc, start_address, count);
+}
+
 /*
  * Local variables:
  * mode: C

